// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Refuntations_App.Data;

#nullable disable

namespace Refuntations_App.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "c031643f-5501-4892-a622-521959efb873",
                            ConcurrencyStamp = "ce0296b2-cadc-4fff-a2f8-fed5feaf0389",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "0959f863-544f-48eb-a025-cb1c36e6cf12",
                            ConcurrencyStamp = "1b6255a0-f2dd-4040-8631-114f72e4188d",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Refuntations_App_Data.Model.AAPdvSAPKeyMaterial", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Materijal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PDV")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SAP_Kljuc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("d_ins")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("d_upd")
                        .HasColumnType("datetime2");

                    b.Property<string>("k_ins")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("k_upd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("naziv_aa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("sifra_aa")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tab_refundacije_sif_AA_PDV_SAPKljuc_Materijal_NEW");
                });

            modelBuilder.Entity("Refuntations_App_Data.Model.CategoryInternalOrderCostLocation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("d_ins")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("d_upd")
                        .HasColumnType("datetime2");

                    b.Property<string>("interni_nalog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("k_ins")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("k_upd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mesto_troska")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("naziv_kat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sifra_kat")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tab_refundacije_sif_Kategorija_InterniNalog_MestoTroska");
                });

            modelBuilder.Entity("Refuntations_App_Data.Model.CounterSapIdSapKeyAmount", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("SAP_kljuc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SAP_sifra_dobavljac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("br_knjiznog_zaduzenja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("brojac")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("d_ins")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("d_upd")
                        .HasColumnType("datetime2");

                    b.Property<int?>("godina")
                        .HasColumnType("int");

                    b.Property<double?>("iznos")
                        .HasColumnType("float");

                    b.Property<string>("k_ins")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("k_upd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("mesec")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tab_refundacije_sif_Brojac_SAPkljuc");
                });

            modelBuilder.Entity("Refuntations_App_Data.Model.Email", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("d_ins")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("d_upd")
                        .HasColumnType("datetime2");

                    b.Property<string>("k_ins")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("k_upd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sap_sifra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("sifra")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tab_refundacije_sif_dobavljaci_mail");
                });

            modelBuilder.Entity("Refuntations_App_Data.Model.EmailImport", b =>
                {
                    b.Property<string>("sap_sifra")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("sap_sifra");

                    b.ToTable("tab_refundacije_sif_dobavljaci_mail_import");
                });

            modelBuilder.Entity("Refuntations_App_Data.Model.FinalSettlements", b =>
                {
                    b.Property<DateTime?>("Datum_realizovano")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dobavljac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("I")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Iznos_realizovano_stopa_1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Iznos_realizovano_stopa_2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Iznos_refundacije_stopa_1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Iznos_refundacije_stopa_2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Kategorija")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NP")
                        .HasColumnType("bit");

                    b.Property<string>("Period")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Sifra_AA")
                        .HasColumnType("int");

                    b.Property<string>("Vrsta_AA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("datum_do_aa")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("datum_od_aa")
                        .HasColumnType("datetime2");

                    b.Property<int?>("id_iznos_stopa_1")
                        .HasColumnType("int");

                    b.Property<int?>("id_iznos_stopa_2")
                        .HasColumnType("int");

                    b.Property<string>("obrada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("sifra_dob")
                        .HasColumnType("int");

                    b.Property<string>("sifra_kat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("status_stavke_obracuna")
                        .HasColumnType("smallint");

                    b.ToTable("finalSettlement");
                });

            modelBuilder.Entity("Refuntations_App_Data.Model.ForeignSupplier", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("d_ins")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("d_upd")
                        .HasColumnType("datetime2");

                    b.Property<string>("k_ins")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("k_upd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("naziv_ino_dobavljac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("sifra_ino_dobavljac")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tab_refundacije_sif_inO_dobavljaci");
                });

            modelBuilder.Entity("Refuntations_App_Data.Model.InternalSupplier", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("d_ins")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("d_upd")
                        .HasColumnType("datetime2");

                    b.Property<string>("k_ins")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("k_upd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("naziv_int_dobavljac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("sifra_int_dobavljac")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tab_refundacije_sif_interni_dobavljaci");
                });

            modelBuilder.Entity("Refuntations_App_Data.Model.OnlineUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("D_Ins")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D_Upd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("K_Ins")
                        .HasColumnType("int");

                    b.Property<int>("K_Upd")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("OnlineUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
